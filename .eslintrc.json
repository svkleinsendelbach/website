{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    },
    {
      "parserOptions": {
        "project": "tsconfig.(app|spec).json"
      },
      "files": [
        "*.ts"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "semi": ["error", "always"],
        "quotes": ["error", "single"],
        "indent": "off",
        "@typescript-eslint/indent": ["error", 4, {
            "SwitchCase": 0,
            "VariableDeclarator": 1,
            "outerIIFEBody": 1,
            "MemberExpression": 1,
            "FunctionDeclaration": {
                "body": 1,
                "parameters": 1
            },
            "FunctionExpression": {
                "body": 1,
                "parameters": 1
            },
            "StaticBlock": {
                "body": 1
            },
            "CallExpression": {
                "arguments": 1
            },
            "ArrayExpression": 1,
            "ObjectExpression": 1,
            "ImportDeclaration": 1,
            "flatTernaryExpressions": false,
            "offsetTernaryExpressions": false,
            "ignoreComments": false
        }],
        "@typescript-eslint/semi": ["error", "always"],
        "@typescript-eslint/no-empty-function": ["error", {
          "allow": ["functions", "arrowFunctions", "methods", "constructors", "asyncFunctions", "asyncMethods"]
        }],
        "@typescript-eslint/method-signature-style": ["error", "method"],
        "@typescript-eslint/member-delimiter-style": ["error", {
          "multiline": {
            "delimiter": "semi",
            "requireLast": true
          }
        }],
        "@typescript-eslint/no-namespace": "off",
        "@typescript-eslint/consistent-type-imports": "off",
        "eqeqeq": ["error", "always"],
        "no-inner-declarations": "off",
        "@typescript-eslint/space-before-function-paren": "off",
        "@angular-eslint/component-class-suffix": "off",
        "space-infix-ops": "error",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-unused-vars": "off"
      }
    }
  ]
}
